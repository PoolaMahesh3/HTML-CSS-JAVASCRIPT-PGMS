Friday:-

function BouSum(a, m, n)
{
	let sum = 0;
	for(let i = 0; i < m; i++)
	{
		for(let j = 0; j < n; j++)
		{
			if (i == 0)
				sum += a[i][j];
			else if (i == m - 1)
				sum += a[i][j];
			else if (j == 0)
				sum += a[i][j];
			else if (j == n - 1)
				sum += a[i][j];
		}
	}
	return sum;
}

let a = [ [ 1, 2, 3, 4 ],
		[ 5, 6, 7, 8 ],
		[ 1, 2, 3, 4 ],
		[ 5, 6, 7, 8 ] ];
let sum = BouSum(a, 2, 2);

----------------------------------------------------------------

function Boundary(a, m, n)
{
  let result = []
	for (var i = 0; i < m; i++) {
    let b1 = []
		for (var j = 0; j < n; j++) {
			if (i == 0)
				console.log(a[i][j] + '');
			else if (i == m - 1)
				console.log(a[i][j] + '');
			else if (j == 0)
				console.log(a[i][j] + '');
			else if (j == n - 1)
				console.log(a[i][j] + '');
			else
				console.log("");
		}
		console.log("");
	}
  // a.slice(0,4);
  // return a;
}

var a = [ [ 1, 2, 3, 4 ],
			[ 5, 6, 7, 8 ],
			[ 1, 2, 3, 4 ],
			[ 5, 6, 7, 8 ]];
console.log(Boundary(a,4,4))

------------------------------------------------------------------------------------

var arr = new Array(2);
for (var i = 0; i < arr.length; i++) {
	arr[i] = new Array(2);
}
var h = 1;
for (var i = 0; i < 2; i++) {
	for (var j = 0; j < 2; j++) {
		arr[i][j] = h++;
	}
}
for (var i = 0; i < 2; i++) {
	for (var j = 0; j < 2; j++) {
		console.log(arr[i][j] + " ");
	}
	console.log("<br>");
}

------------------------------------------------------------------------------------

function getarrdepth(obj) {
    if (Array.isArray(obj)) return 1 + Math.max(...obj.map(t => getarrdepth(t)))
    else 
      return 0
}
let arr=[1,2,[3,4,[5,6],7,[8,[9,91]],10],11,12]
console.log(getarrdepth(arr))
console.log(getarrdepth([1,[1]]));
